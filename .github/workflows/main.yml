name: Main
on:
  pull_request:
    branches: [master, develop]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test using Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.16"
      - name: Test testing mode is 'false' in settings.json
        run: |
          ps -p $$
          jq --version
          MERCURY_WALLET_TESTING_MODE=`jq .testing_mode src/settings.json`
          if [ $MERCURY_WALLET_TESTING_MODE != false ]; then exit 1; fi
      - run: sed -i -e 's/false/true/g' src/settings.json
      - run: npm install --force
      - run: yarn test
  e2e-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        uses: actions/setup-node@v3
        with:
          node-version: "16.16"
          runTests: false
      - run: npm install --force
      - name: Run e2e tests
        uses: cypress-io/github-action@v4
        with:
          start: npm start
          wait-on: "http://localhost:3000/#/"
          browser: chrome
          # we have already installed all dependencies above
          install: false
  build_on_linux:
    runs-on: ubuntu-latest
    container:
      image: electronuserland/builder:wine
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.16"

      - name: build
        env:
          CI: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pwd
          id
          yarn app-linux
          echo "finished linux"
  build_on_win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
        with:
          ref: feature/github-actions
      - uses: actions/setup-node@master
        with:
          node-version: "16.16"
      - name: install node tools
        run: npm install --global --production windows-build-tools@4.0.0
      - name: install node-gyp
        run: npm install --global node-gyp@latest
      - name: Set node config to use python2.7
        run: npm config set python python2.7
      - name: Set node config to set msvs_version to 2015
        run: npm config set msvs_version 2015
      - name: Work around for Windows Server 2019
        run: set path=%path%;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin
      - name: Install dependencies
        run: npm install --force
      - name: check env
        env:
          ELECTRON: true
          APP_VERSION_NUMBER: 0.5.9
        run: set
      - name: Build on Windows
        env:
          ELECTRON: true
          APP_VERSION_NUMBER: 0.5.9
        run: yarn app-windows
      - name: Build Electron
        env:
          ELECTRON: true
          APP_VERSION_NUMBER: 0.5.9
        run: yarn electron:buildWin
      - name: see directory
        run: ls ./electron_dist/squirrel-windows
      - uses: lucyio/upload-to-release@master
        with:
          name: lucyio/electron
          path: ./electron_dist/squirrel-windows
          action: unpublished
          release_id: 0.5.9
          release-repo: lucyio/electron
  build_on_mac:
    runs-on: macos-latest
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.16"

      - name: build
        env:
          CI: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          API_KEY_ID: ${{ secrets.API_KEY_ID }}
          API_KEY_ISSUER_ID: ${{ secrets.API_KEY_ISSUER_ID }}
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.API_KEY_ID }}.p8
          yarn config set network-timeout 300000
          yarn app-macos
          ls -la dist
